{"version":3,"sources":["component/Paginator.tsx","App.tsx","index.tsx"],"names":["Paginator","total","perPage","pages","useState","selPage","setSelPage","arrPage","Array","from","keys","className","classNames","disabled","type","onClick","prevSelPage","map","page","active","App","setPerPage","numOfPage","Math","ceil","id","onChange","event","target","value","defaultValue","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAA6B,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAC3D,EAA8BC,mBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAEMC,EAAUC,MAAMC,KAAKD,MAAML,GAAOO,QAExC,OACE,qCACE,oBAAI,UAAQ,OAAOC,UAAU,QAA7B,wBACWN,EAAU,EADrB,mBACkCH,GAAWG,EAAU,GAAMH,EAAU,EADvE,cAGKA,GAAWG,EAAU,GAAKJ,EAAQA,EAAQC,GAAWG,EAAU,GAHpE,eAG8EJ,EAH9E,OAOA,qBAAK,aAAW,MAAhB,SACE,qBAAIU,UAAU,aAAd,UACE,oBAAIA,UAAWC,IACb,YAAa,CACXC,SAAsB,IAAZR,IAFd,SAME,wBACES,KAAK,SACLH,UAAU,YACVI,QAAS,kBAAMT,GAAW,SAAAU,GAAW,OAAIA,EAAc,MAHzD,oBAQDT,EAAQU,KAAI,SAAAC,GAAI,OACf,oBAAIP,UAAU,YAAd,SACE,wBACEG,KAAK,SACLH,UAAWC,IACT,YAAa,CACXO,OAAQd,IAAYa,IAGxBH,QAAS,kBAAMT,EAAWY,IAP5B,SASGA,EAAO,KAVmBA,MAcjC,oBAAIP,UAAWC,IACb,YAAa,CACXC,SAAUR,IAAYF,EAAQ,IAFlC,SAME,wBACEW,KAAK,SACLH,UAAU,YACVI,QAAS,kBAAMT,GAAW,SAAAU,GAAW,OAAIA,EAAc,MAHzD,6BCrBGI,EAnCO,WACpB,MAA8BhB,mBAAS,GAAvC,mBAAOF,EAAP,KAAgBmB,EAAhB,KAGMC,EAAYC,KAAKC,KADT,GACsBtB,GAEpC,OACE,sBAAKS,UAAU,YAAf,UACE,cAAC,EAAD,CACEV,MANQ,GAORC,QAASA,EACTC,MAAOmB,IAGT,sBAAKX,UAAU,oBAAf,UACE,yBACEA,UAAU,cACVc,GAAG,iBACH,aAAW,gCACXC,SAAU,SAACC,GAAD,OAAWN,GAAYM,EAAMC,OAAOC,QAC9CC,aAAc,EACd,UAAQ,kBANV,UAQE,wBAAQD,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,mBAEF,uBAAOE,QAAQ,iBAAf,+CC7BRC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.53b63308.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ninterface Props {\n  total: number\n  perPage: number\n  pages: number\n}\n\nexport const Paginator: React.FC<Props> = ({ total, perPage, pages }) => {\n  const [selPage, setSelPage] = useState(0);\n\n  const arrPage = Array.from(Array(pages).keys());\n\n  return (\n    <>\n      <h1 data-cy=\"info\" className=\"title\">\n        {`Page ${selPage + 1} (items ${(perPage * (selPage + 1)) - perPage + 1} - ${\n\n          (perPage * (selPage + 1) > total ? total : perPage * (selPage + 1))} of ${total})`}\n\n      </h1>\n\n      <nav aria-label=\"...\">\n        <ul className=\"pagination\">\n          <li className={classNames(\n            'page-item', {\n              disabled: selPage === 0,\n            },\n          )}\n          >\n            <button\n              type=\"button\"\n              className=\"page-link\"\n              onClick={() => setSelPage(prevSelPage => prevSelPage - 1)}\n            >\n              «\n            </button>\n          </li>\n          {arrPage.map(page => (\n            <li className=\"page-item\" key={page}>\n              <button\n                type=\"button\"\n                className={classNames(\n                  'page-link', {\n                    active: selPage === page,\n                  },\n                )}\n                onClick={() => setSelPage(page)}\n              >\n                {page + 1}\n              </button>\n            </li>\n          ))}\n          <li className={classNames(\n            'page-item', {\n              disabled: selPage === pages - 1,\n            },\n          )}\n          >\n            <button\n              type=\"button\"\n              className=\"page-link\"\n              onClick={() => setSelPage(prevSelPage => prevSelPage + 1)}\n            >\n              »\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { Paginator } from './component/Paginator';\n\nconst App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n\n  const total = 42;\n  const numOfPage = Math.ceil(total / perPage);\n\n  return (\n    <div className=\"container\">\n      <Paginator\n        total={total}\n        perPage={perPage}\n        pages={numOfPage}\n      />\n\n      <div className=\"form-floating m-3\">\n        <select\n          className=\"form-select\"\n          id=\"floatingSelect\"\n          aria-label=\"Floating label select example\"\n          onChange={(event) => setPerPage(+event.target.value)}\n          defaultValue={5}\n          data-cy=\"perPageSelector\"\n        >\n          <option value=\"3\">3</option>\n          <option value=\"5\">5</option>\n          <option value=\"10\">10</option>\n          <option value=\"20\">20</option>\n        </select>\n        <label htmlFor=\"floatingSelect\">Choose the number of cards</label>\n      </div>\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}